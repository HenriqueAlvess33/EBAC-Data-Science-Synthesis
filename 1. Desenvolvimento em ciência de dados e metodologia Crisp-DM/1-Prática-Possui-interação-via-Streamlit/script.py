import streamlit as st


def main():
    # Configura o t√≠tulo da aplica√ß√£o
    st.set_page_config(
        page_title="Previs√£o de renda dos clientes",
        layout="wide",
        initial_sidebar_state="expanded",
        page_icon="varig_icon.png",
    )
    st.markdown(
        """
    <link href="https://fonts.googleapis.com/css2?family=Kantumruy+Pro&display=swap" rel="stylesheet">

    <h1 style='text-align: center; font-family: "Kantumruy Pro", sans-serif; font-size: 3em;'>
        <strong>Atividades Introdut√≥rias ao Python</strong>
    </h1>
    """,
        unsafe_allow_html=True,
    )


main()

aba1, aba2, aba3, aba4 = st.tabs(
    ["üíä Gravidez", "‚ûó Divisibilidade", "üî¢ N√∫meros Primos", "‚öñÔ∏è Calculadora de IMC"]
)
with aba1:
    with st.expander("üß™ Teste de Gravidez - Beta hCG", expanded=False):

        # Se√ß√£o de g√™nero
        genero = st.radio(
            "**üë• G√™nero**",
            options=["Masculino", "Feminino"],
            index=0,
            horizontal=True,
            key="genero_radio",
        )

        # Se√ß√£o do exame
        st.subheader("üìä Resultado do Exame")
        beta_hcg = st.number_input(
            "N√≠vel de beta-hCG (mUI/mL):",
            min_value=0.0,
            max_value=1000.0,
            value=0.0,
            step=0.1,
            help="Valor normal: < 5 mUI/mL",
        )

        # Interpreta√ß√£o m√©dica
        st.subheader("üîç Interpreta√ß√£o")

        if beta_hcg < 5:
            st.success("‚úÖ **Resultado Negativo**")
            st.info("N√≠vel de beta-hCG dentro da normalidade")

        elif 5 <= beta_hcg <= 25:
            st.warning("‚ö†Ô∏è **Resultado Indeterminado**")
            st.info("Pode ser muito precoce. Repita o teste em 48-72 horas.")

        else:
            st.error("üéØ **Resultado Positivo**")

            if genero == "Feminino":
                # Estimativa gestacional baseada em beta-hCG
                if beta_hcg < 1000:
                    st.success("üìÖ Provavelmente 3-4 semanas de gesta√ß√£o")
                elif 1000 <= beta_hcg < 10000:
                    st.success("üìÖ Provavelmente 4-5 semanas de gesta√ß√£o")
                else:
                    st.success("üìÖ Provavelmente mais de 5 semanas")

                st.info("ü©∫ Procure acompanhamento m√©dico para confirma√ß√£o")

            else:
                st.error("üö® **ATEN√á√ÉO M√âDICA URGENTE**")
                st.warning(
                    """
                N√≠veis elevados de beta-hCG em homens podem indicar:
                - Tumores germinativos
                - Outras condi√ß√µes m√©dicas
                **Procure um m√©dico imediatamente!**
                """
                )

    # Informa√ß√µes adicionais
    with st.expander("‚ÑπÔ∏è Informa√ß√µes sobre beta-hCG"):
        st.write(
            """
            - **N√£o gr√°vida:** < 5 mUI/mL
            - **3 semanas:** 5-50 mUI/mL
            - **4 semanas:** 5-426 mUI/mL  
            - **5 semanas:** 18-7,340 mUI/mL
            - **6 semanas:** 1,080-56,500 mUI/mL
            - **Homens:** < 5 mUI/mL (valores elevados requerem investiga√ß√£o)
            """
        )
with aba2:
    with st.expander("√â divis√≠vel ?"):
        # Nota: Vamos usar 'min_value' para evitar entradas negativas, se desejar.
        # O passo crucial: definir min_value=1 para M para evitar o zero completamente!
        N = st.number_input(
            "Selecione um valor para ser dividido (Numerador)", step=1, value=10
        )
        M = st.number_input(
            "Selecione um valor para dividir (Denominador)",
            step=1,
            value=2,
            min_value=1,
        )  # <-- A SOLU√á√ÉO PRINCIPAL

        st.caption(f"Testando se {N} √© divis√≠vel por {M}...")

        # L√≥gica Impec√°vel
        if M == 0:
            # Esta condi√ß√£o agora √© quase imposs√≠vel devido ao min_value=1,
            # mas √© uma boa pr√°tica defensiva mant√™-la.
            st.error(
                "‚ùå Erro Cr√≠tico: O denominador (valor para dividir) n√£o pode ser zero."
            )
        else:
            # Agora podemos calcular com seguran√ßa
            if N % M == 0:
                st.success(
                    f"‚úÖ Sim! {N} √© perfeitamente divis√≠vel por {M}. O resultado √© {N // M}."
                )
            else:
                st.warning(
                    f"‚ö†Ô∏è N√£o. {N} **n√£o** √© divis√≠vel por {M}. O resto da divis√£o √© {N % M}."
                )

with aba3:
    with st.expander("üîç √â primo?", expanded=True):

        st.subheader("Verifica√ß√£o de N√∫mero Primo")

        N = st.number_input(
            "Digite um n√∫mero inteiro maior ou igual a 2:",
            min_value=2,
            step=1,
            value=17,
            key="verificador_primo",
        )

        st.caption(f"Verificando se {N} √© um n√∫mero primo...")
        st.caption("_Um n√∫mero primo √© divis√≠vel apenas por 1 e por ele mesmo._")

        eh_primo = True

        if N > 2 and N % 2 == 0:
            eh_primo = False
            divisor = 2  #
        else:

            i = 3
            while i * i <= N:
                if N % i == 0:
                    eh_primo = False
                    divisor = i
                    break
                i += 2

        st.subheader("Resultado:")

        if eh_primo:
            st.success(f"‚úÖ **{N} √© um n√∫mero primo!**")
            st.info("√â divis√≠vel apenas por 1 e por ele mesmo.")
        else:

            st.error(f"‚ùå **{N} n√£o √© um n√∫mero primo.**")
            st.write(f"√â divis√≠vel por **{divisor}** (e outros).")
with aba4:
    with st.expander("üìã Verificador de IMC", expanded=True):  # Adicionei um emoji
        # Seu dicion√°rio est√° PERFEITO. N√£o mexa nele.
        informacoes_imc = {
            "Abaixo do peso": {
                "intervalo": "Menor que 18,5",
                "descricao": "Indica que a pessoa est√° abaixo do peso considerado saud√°vel. Pode estar associado a desnutri√ß√£o, defici√™ncias nutricionais ou outras condi√ß√µes m√©dicas.",
                "recomendacao": "Buscar avalia√ß√£o m√©dica e nutricional para entender a causa e planejar a recupera√ß√£o de peso de forma saud√°vel.",
            },
            "Peso normal": {
                "intervalo": "18,5 ‚Äì 24,9",
                "descricao": "Faixa considerada saud√°vel, associada a menor risco de doen√ßas relacionadas ao peso.",
                "recomendacao": "Manter h√°bitos equilibrados de alimenta√ß√£o, pr√°tica regular de atividade f√≠sica e acompanhamento peri√≥dico da sa√∫de.",
            },
            "Sobrepeso": {
                "intervalo": "25,0 ‚Äì 29,9",
                "descricao": "Indica ac√∫mulo de peso acima do recomendado. Pode aumentar o risco de problemas como hipertens√£o e diabetes.",
                "recomendacao": "Adotar mudan√ßas no estilo de vida com alimenta√ß√£o balanceada e aumento da pr√°tica de exerc√≠cios f√≠sicos.",
            },
            "Obesidade grau I": {
                "intervalo": "30,0 ‚Äì 34,9",
                "descricao": "Primeiro n√≠vel de obesidade, j√° considerado fator de risco para doen√ßas cardiovasculares, diabetes tipo 2 e problemas articulares.",
                "recomendacao": "Procurar acompanhamento m√©dico e nutricional para elaborar um plano de controle de peso.",
            },
            "Obesidade grau II": {
                "intervalo": "35,0 ‚Äì 39,9",
                "descricao": "Obesidade severa, com risco elevado de doen√ßas graves como apneia do sono, doen√ßas card√≠acas e metab√≥licas.",
                "recomendacao": "Requer acompanhamento profissional multidisciplinar e mudan√ßas intensivas no estilo de vida.",
            },
            "Obesidade grau III": {
                "intervalo": "Maior ou igual a 40,0",
                "descricao": "Tamb√©m chamada de obesidade m√≥rbida, est√° associada a risco muito elevado de complica√ß√µes graves e redu√ß√£o da expectativa de vida.",
                "recomendacao": "Necess√°rio acompanhamento m√©dico rigoroso; em alguns casos, pode ser indicada cirurgia bari√°trica.",
            },
        }

        st.subheader("Insira seus dados")
        col1, col2 = st.columns(2)
        with col1:
            altura = st.number_input(
                "Altura (metros):", step=0.01, min_value=1.00, value=1.70
            )
        with col2:
            peso = st.number_input("Peso (kg):", step=0.1, min_value=20.0, value=70.0)

        # C√°lculo do IMC
        imc_calculado = round(peso / (altura**2), 2)

        # Determinar a classifica√ß√£o CORRETAMENTE
        if imc_calculado < 18.5:
            classificacao = "Abaixo do peso"
        elif 18.5 <= imc_calculado < 25:
            classificacao = "Peso normal"
        elif 25 <= imc_calculado < 30:
            classificacao = "Sobrepeso"
        elif 30 <= imc_calculado < 35:
            classificacao = "Obesidade grau I"
        elif 35 <= imc_calculado < 40:
            classificacao = "Obesidade grau II"
        else:  # imc_calculado >= 40
            classificacao = "Obesidade grau III"

        # Exibir resultados de forma organizada
        st.divider()
        st.subheader("Seu Resultado")

        # Usar uma m√©trica para mostrar o IMC
        st.metric(label="**Seu IMC √©:**", value=f"{imc_calculado}")

        # Criar um container para o diagn√≥stico para dar destaque
        diagnostico_container = st.container(border=True)
        with diagnostico_container:
            st.markdown(f"**Classifica√ß√£o:** {classificacao}")
            st.markdown(
                f"*Faixa de IMC: {informacoes_imc[classificacao]['intervalo']}*"
            )
            st.write("")  # Espa√ßamento
            st.info(informacoes_imc[classificacao]["descricao"])
            st.write("")  # Espa√ßamento
            st.success(
                f"**Recomenda√ß√£o:** {informacoes_imc[classificacao]['recomendacao']}"
            )

        # Disclaimer importante
        st.caption(
            "_‚ö†Ô∏è Este c√°lculo fornece uma classifica√ß√£o geral. Para uma avalia√ß√£o de sa√∫de completa, consulte sempre um profissional m√©dico. O IMC n√£o considera fatores como massa muscular, idade, sexo ou gen√©tica._"
        )
